@page "/agents/{id:guid}/edit"
@using System.Threading

@inject IAgentManager AgentManager
@inject NavigationManager NavigationManager

@if(agent == null || model == null) {
    <p>The requested agent could not be found.</p>
}
else {
    var config = agent.Config;
    var agentUrl = $"agents/{Id}";
    
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="">Home</a></li>
            <li class="breadcrumb-item"><a href="agents">Agents</a></li>
            <li class="breadcrumb-item"><a href="@agentUrl">@(config.Name)</a></li>
            <li class="breadcrumb-item active">Edit</li>
        </ol>
    </nav>

    <h1>Edit Agent - @(config.Name)</h1>

    <AgentEditor Model="@model" ButtonLabel="Save" OnSubmit="OnSubmit" />
}

@code {

    [Parameter]
    public Guid Id { get; set; }

    private AgentEditModel? model = null;

    private IAgent? agent;
    
    protected override void OnInitialized() {
        agent = AgentManager.GetAgent(Id);
        if(agent == null) return;

        var config = agent.Config;

        model = new AgentEditModel(config.Key) {
            Name = config.Name,
        };
    }
    
    private async Task OnSubmit() {
        if(agent == null || model == null) return;
        
        var agentConfig = model.ToConfig();

        if(agentConfig != null) {
            await agent.UpdateConfig(agentConfig, CancellationToken.None);
            NavigationManager.NavigateTo("agents/" + agent.Id);
        }
    }

}
